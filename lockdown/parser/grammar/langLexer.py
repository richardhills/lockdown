# Generated from lang.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2D")
        buf.write("\u01e4\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\3\2\3\2\3\3\3\3")
        buf.write("\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3")
        buf.write("\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3")
        buf.write("\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3")
        buf.write("\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22")
        buf.write("\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34")
        buf.write("\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"")
        buf.write("\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3")
        buf.write("\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*")
        buf.write("\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3")
        buf.write("-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3\60\3")
        buf.write("\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62")
        buf.write("\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\64\3\64\3\64")
        buf.write("\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65")
        buf.write("\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66")
        buf.write("\3\67\3\67\3\67\38\38\38\38\38\38\38\38\39\39\39\39\3")
        buf.write("9\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3=\3=\3")
        buf.write("=\3=\3=\3>\3>\3>\3>\3>\3?\3?\3?\3@\3@\3@\7@\u01a2\n@\f")
        buf.write("@\16@\u01a5\13@\3@\3@\3A\3A\7A\u01ab\nA\fA\16A\u01ae\13")
        buf.write("A\3B\3B\3B\5B\u01b3\nB\3C\3C\3C\3C\3C\3C\3D\3D\3E\3E\3")
        buf.write("F\5F\u01c0\nF\3F\3F\3F\6F\u01c5\nF\rF\16F\u01c6\5F\u01c9")
        buf.write("\nF\3F\5F\u01cc\nF\3G\3G\3G\7G\u01d1\nG\fG\16G\u01d4\13")
        buf.write("G\5G\u01d6\nG\3H\3H\5H\u01da\nH\3H\3H\3I\6I\u01df\nI\r")
        buf.write("I\16I\u01e0\3I\3I\2\2J\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64")
        buf.write("g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083\2\u0085")
        buf.write("\2\u0087\2\u0089\2\u008bC\u008d\2\u008f\2\u0091D\3\2\f")
        buf.write("\5\2C\\aac|\6\2\62;C\\aac|\n\2$$\61\61^^ddhhppttvv\5\2")
        buf.write("\62;CHch\5\2\2!$$^^\3\2\62;\3\2\63;\4\2GGgg\4\2--//\5")
        buf.write("\2\13\f\17\17\"\"\2\u01e9\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2")
        buf.write("c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2")
        buf.write("\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2")
        buf.write("\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3")
        buf.write("\2\2\2\2\u0081\3\2\2\2\2\u008b\3\2\2\2\2\u0091\3\2\2\2")
        buf.write("\3\u0093\3\2\2\2\5\u0095\3\2\2\2\7\u0097\3\2\2\2\t\u0099")
        buf.write("\3\2\2\2\13\u009b\3\2\2\2\r\u009d\3\2\2\2\17\u009f\3\2")
        buf.write("\2\2\21\u00a4\3\2\2\2\23\u00aa\3\2\2\2\25\u00af\3\2\2")
        buf.write("\2\27\u00b7\3\2\2\2\31\u00c0\3\2\2\2\33\u00c2\3\2\2\2")
        buf.write("\35\u00c4\3\2\2\2\37\u00c7\3\2\2\2!\u00ca\3\2\2\2#\u00d3")
        buf.write("\3\2\2\2%\u00d5\3\2\2\2\'\u00d7\3\2\2\2)\u00de\3\2\2\2")
        buf.write("+\u00e6\3\2\2\2-\u00e8\3\2\2\2/\u00ea\3\2\2\2\61\u00ed")
        buf.write("\3\2\2\2\63\u00f0\3\2\2\2\65\u00f2\3\2\2\2\67\u00f4\3")
        buf.write("\2\2\29\u00f6\3\2\2\2;\u00f8\3\2\2\2=\u00fa\3\2\2\2?\u00fc")
        buf.write("\3\2\2\2A\u00fe\3\2\2\2C\u0101\3\2\2\2E\u0104\3\2\2\2")
        buf.write("G\u0107\3\2\2\2I\u010a\3\2\2\2K\u010d\3\2\2\2M\u0110\3")
        buf.write("\2\2\2O\u0113\3\2\2\2Q\u011c\3\2\2\2S\u0122\3\2\2\2U\u0126")
        buf.write("\3\2\2\2W\u012c\3\2\2\2Y\u0133\3\2\2\2[\u0139\3\2\2\2")
        buf.write("]\u0140\3\2\2\2_\u0145\3\2\2\2a\u0148\3\2\2\2c\u014f\3")
        buf.write("\2\2\2e\u0155\3\2\2\2g\u0159\3\2\2\2i\u015e\3\2\2\2k\u0169")
        buf.write("\3\2\2\2m\u0172\3\2\2\2o\u0175\3\2\2\2q\u017d\3\2\2\2")
        buf.write("s\u0182\3\2\2\2u\u0187\3\2\2\2w\u018d\3\2\2\2y\u0191\3")
        buf.write("\2\2\2{\u0196\3\2\2\2}\u019b\3\2\2\2\177\u019e\3\2\2\2")
        buf.write("\u0081\u01a8\3\2\2\2\u0083\u01af\3\2\2\2\u0085\u01b4\3")
        buf.write("\2\2\2\u0087\u01ba\3\2\2\2\u0089\u01bc\3\2\2\2\u008b\u01bf")
        buf.write("\3\2\2\2\u008d\u01d5\3\2\2\2\u008f\u01d7\3\2\2\2\u0091")
        buf.write("\u01de\3\2\2\2\u0093\u0094\7}\2\2\u0094\4\3\2\2\2\u0095")
        buf.write("\u0096\7.\2\2\u0096\6\3\2\2\2\u0097\u0098\7\177\2\2\u0098")
        buf.write("\b\3\2\2\2\u0099\u009a\7<\2\2\u009a\n\3\2\2\2\u009b\u009c")
        buf.write("\7]\2\2\u009c\f\3\2\2\2\u009d\u009e\7_\2\2\u009e\16\3")
        buf.write("\2\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7t\2\2\u00a1\u00a2")
        buf.write("\7w\2\2\u00a2\u00a3\7g\2\2\u00a3\20\3\2\2\2\u00a4\u00a5")
        buf.write("\7h\2\2\u00a5\u00a6\7c\2\2\u00a6\u00a7\7n\2\2\u00a7\u00a8")
        buf.write("\7u\2\2\u00a8\u00a9\7g\2\2\u00a9\22\3\2\2\2\u00aa\u00ab")
        buf.write("\7p\2\2\u00ab\u00ac\7w\2\2\u00ac\u00ad\7n\2\2\u00ad\u00ae")
        buf.write("\7n\2\2\u00ae\24\3\2\2\2\u00af\u00b0\7f\2\2\u00b0\u00b1")
        buf.write("\7{\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4")
        buf.write("\7o\2\2\u00b4\u00b5\7k\2\2\u00b5\u00b6\7e\2\2\u00b6\26")
        buf.write("\3\2\2\2\u00b7\u00b8\7h\2\2\u00b8\u00b9\7w\2\2\u00b9\u00ba")
        buf.write("\7p\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd")
        buf.write("\7k\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7p\2\2\u00bf\30")
        buf.write("\3\2\2\2\u00c0\u00c1\7*\2\2\u00c1\32\3\2\2\2\u00c2\u00c3")
        buf.write("\7+\2\2\u00c3\34\3\2\2\2\u00c4\u00c5\7*\2\2\u00c5\u00c6")
        buf.write("\7~\2\2\u00c6\36\3\2\2\2\u00c7\u00c8\7~\2\2\u00c8\u00c9")
        buf.write("\7+\2\2\u00c9 \3\2\2\2\u00ca\u00cb\7n\2\2\u00cb\u00cc")
        buf.write("\7q\2\2\u00cc\u00cd\7e\2\2\u00cd\u00ce\7m\2\2\u00ce\u00cf")
        buf.write("\7f\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7y\2\2\u00d1\u00d2")
        buf.write("\7p\2\2\u00d2\"\3\2\2\2\u00d3\u00d4\7?\2\2\u00d4$\3\2")
        buf.write("\2\2\u00d5\u00d6\7=\2\2\u00d6&\3\2\2\2\u00d7\u00d8\7u")
        buf.write("\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7c\2\2\u00da\u00db")
        buf.write("\7v\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7e\2\2\u00dd(\3")
        buf.write("\2\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7{\2\2\u00e0\u00e1")
        buf.write("\7r\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7f\2\2\u00e3\u00e4")
        buf.write("\7g\2\2\u00e4\u00e5\7h\2\2\u00e5*\3\2\2\2\u00e6\u00e7")
        buf.write("\7>\2\2\u00e7,\3\2\2\2\u00e8\u00e9\7@\2\2\u00e9.\3\2\2")
        buf.write("\2\u00ea\u00eb\7~\2\2\u00eb\u00ec\7@\2\2\u00ec\60\3\2")
        buf.write("\2\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7u\2\2\u00ef\62\3")
        buf.write("\2\2\2\u00f0\u00f1\7\60\2\2\u00f1\64\3\2\2\2\u00f2\u00f3")
        buf.write("\7A\2\2\u00f3\66\3\2\2\2\u00f4\u00f5\7,\2\2\u00f58\3\2")
        buf.write("\2\2\u00f6\u00f7\7\61\2\2\u00f7:\3\2\2\2\u00f8\u00f9\7")
        buf.write("-\2\2\u00f9<\3\2\2\2\u00fa\u00fb\7/\2\2\u00fb>\3\2\2\2")
        buf.write("\u00fc\u00fd\7\'\2\2\u00fd@\3\2\2\2\u00fe\u00ff\7?\2\2")
        buf.write("\u00ff\u0100\7?\2\2\u0100B\3\2\2\2\u0101\u0102\7#\2\2")
        buf.write("\u0102\u0103\7?\2\2\u0103D\3\2\2\2\u0104\u0105\7>\2\2")
        buf.write("\u0105\u0106\7?\2\2\u0106F\3\2\2\2\u0107\u0108\7@\2\2")
        buf.write("\u0108\u0109\7?\2\2\u0109H\3\2\2\2\u010a\u010b\7~\2\2")
        buf.write("\u010b\u010c\7~\2\2\u010cJ\3\2\2\2\u010d\u010e\7(\2\2")
        buf.write("\u010e\u010f\7(\2\2\u010fL\3\2\2\2\u0110\u0111\7>\2\2")
        buf.write("\u0111\u0112\7>\2\2\u0112N\3\2\2\2\u0113\u0114\7e\2\2")
        buf.write("\u0114\u0115\7q\2\2\u0115\u0116\7p\2\2\u0116\u0117\7v")
        buf.write("\2\2\u0117\u0118\7k\2\2\u0118\u0119\7p\2\2\u0119\u011a")
        buf.write("\7w\2\2\u011a\u011b\7g\2\2\u011bP\3\2\2\2\u011c\u011d")
        buf.write("\7d\2\2\u011d\u011e\7t\2\2\u011e\u011f\7g\2\2\u011f\u0120")
        buf.write("\7c\2\2\u0120\u0121\7m\2\2\u0121R\3\2\2\2\u0122\u0123")
        buf.write("\7,\2\2\u0123\u0124\7~\2\2\u0124\u0125\7@\2\2\u0125T\3")
        buf.write("\2\2\2\u0126\u0127\7r\2\2\u0127\u0128\7t\2\2\u0128\u0129")
        buf.write("\7k\2\2\u0129\u012a\7p\2\2\u012a\u012b\7v\2\2\u012bV\3")
        buf.write("\2\2\2\u012c\u012d\7t\2\2\u012d\u012e\7g\2\2\u012e\u012f")
        buf.write("\7v\2\2\u012f\u0130\7w\2\2\u0130\u0131\7t\2\2\u0131\u0132")
        buf.write("\7p\2\2\u0132X\3\2\2\2\u0133\u0134\7{\2\2\u0134\u0135")
        buf.write("\7k\2\2\u0135\u0136\7g\2\2\u0136\u0137\7n\2\2\u0137\u0138")
        buf.write("\7f\2\2\u0138Z\3\2\2\2\u0139\u013a\7g\2\2\u013a\u013b")
        buf.write("\7z\2\2\u013b\u013c\7r\2\2\u013c\u013d\7q\2\2\u013d\u013e")
        buf.write("\7t\2\2\u013e\u013f\7v\2\2\u013f\\\3\2\2\2\u0140\u0141")
        buf.write("\7l\2\2\u0141\u0142\7u\2\2\u0142\u0143\7q\2\2\u0143\u0144")
        buf.write("\7p\2\2\u0144^\3\2\2\2\u0145\u0146\7?\2\2\u0146\u0147")
        buf.write("\7@\2\2\u0147`\3\2\2\2\u0148\u0149\7Q\2\2\u0149\u014a")
        buf.write("\7d\2\2\u014a\u014b\7l\2\2\u014b\u014c\7g\2\2\u014c\u014d")
        buf.write("\7e\2\2\u014d\u014e\7v\2\2\u014eb\3\2\2\2\u014f\u0150")
        buf.write("\7V\2\2\u0150\u0151\7w\2\2\u0151\u0152\7r\2\2\u0152\u0153")
        buf.write("\7n\2\2\u0153\u0154\7g\2\2\u0154d\3\2\2\2\u0155\u0156")
        buf.write("\7\60\2\2\u0156\u0157\7\60\2\2\u0157\u0158\7\60\2\2\u0158")
        buf.write("f\3\2\2\2\u0159\u015a\7N\2\2\u015a\u015b\7k\2\2\u015b")
        buf.write("\u015c\7u\2\2\u015c\u015d\7v\2\2\u015dh\3\2\2\2\u015e")
        buf.write("\u015f\7F\2\2\u015f\u0160\7k\2\2\u0160\u0161\7e\2\2\u0161")
        buf.write("\u0162\7v\2\2\u0162\u0163\7k\2\2\u0163\u0164\7q\2\2\u0164")
        buf.write("\u0165\7p\2\2\u0165\u0166\7c\2\2\u0166\u0167\7t\2\2\u0167")
        buf.write("\u0168\7{\2\2\u0168j\3\2\2\2\u0169\u016a\7H\2\2\u016a")
        buf.write("\u016b\7w\2\2\u016b\u016c\7p\2\2\u016c\u016d\7e\2\2\u016d")
        buf.write("\u016e\7v\2\2\u016e\u016f\7k\2\2\u016f\u0170\7q\2\2\u0170")
        buf.write("\u0171\7p\2\2\u0171l\3\2\2\2\u0172\u0173\7k\2\2\u0173")
        buf.write("\u0174\7h\2\2\u0174n\3\2\2\2\u0175\u0176\7g\2\2\u0176")
        buf.write("\u0177\7n\2\2\u0177\u0178\7u\2\2\u0178\u0179\7g\2\2\u0179")
        buf.write("\u017a\7\"\2\2\u017a\u017b\7k\2\2\u017b\u017c\7h\2\2\u017c")
        buf.write("p\3\2\2\2\u017d\u017e\7g\2\2\u017e\u017f\7n\2\2\u017f")
        buf.write("\u0180\7u\2\2\u0180\u0181\7g\2\2\u0181r\3\2\2\2\u0182")
        buf.write("\u0183\7n\2\2\u0183\u0184\7q\2\2\u0184\u0185\7q\2\2\u0185")
        buf.write("\u0186\7r\2\2\u0186t\3\2\2\2\u0187\u0188\7y\2\2\u0188")
        buf.write("\u0189\7j\2\2\u0189\u018a\7k\2\2\u018a\u018b\7n\2\2\u018b")
        buf.write("\u018c\7g\2\2\u018cv\3\2\2\2\u018d\u018e\7h\2\2\u018e")
        buf.write("\u018f\7q\2\2\u018f\u0190\7t\2\2\u0190x\3\2\2\2\u0191")
        buf.write("\u0192\7*\2\2\u0192\u0193\7x\2\2\u0193\u0194\7c\2\2\u0194")
        buf.write("\u0195\7t\2\2\u0195z\3\2\2\2\u0196\u0197\7h\2\2\u0197")
        buf.write("\u0198\7t\2\2\u0198\u0199\7q\2\2\u0199\u019a\7o\2\2\u019a")
        buf.write("|\3\2\2\2\u019b\u019c\7k\2\2\u019c\u019d\7p\2\2\u019d")
        buf.write("~\3\2\2\2\u019e\u01a3\7$\2\2\u019f\u01a2\5\u0083B\2\u01a0")
        buf.write("\u01a2\5\u0089E\2\u01a1\u019f\3\2\2\2\u01a1\u01a0\3\2")
        buf.write("\2\2\u01a2\u01a5\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a3\u01a4")
        buf.write("\3\2\2\2\u01a4\u01a6\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a6")
        buf.write("\u01a7\7$\2\2\u01a7\u0080\3\2\2\2\u01a8\u01ac\t\2\2\2")
        buf.write("\u01a9\u01ab\t\3\2\2\u01aa\u01a9\3\2\2\2\u01ab\u01ae\3")
        buf.write("\2\2\2\u01ac\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u0082")
        buf.write("\3\2\2\2\u01ae\u01ac\3\2\2\2\u01af\u01b2\7^\2\2\u01b0")
        buf.write("\u01b3\t\4\2\2\u01b1\u01b3\5\u0085C\2\u01b2\u01b0\3\2")
        buf.write("\2\2\u01b2\u01b1\3\2\2\2\u01b3\u0084\3\2\2\2\u01b4\u01b5")
        buf.write("\7w\2\2\u01b5\u01b6\5\u0087D\2\u01b6\u01b7\5\u0087D\2")
        buf.write("\u01b7\u01b8\5\u0087D\2\u01b8\u01b9\5\u0087D\2\u01b9\u0086")
        buf.write("\3\2\2\2\u01ba\u01bb\t\5\2\2\u01bb\u0088\3\2\2\2\u01bc")
        buf.write("\u01bd\n\6\2\2\u01bd\u008a\3\2\2\2\u01be\u01c0\7/\2\2")
        buf.write("\u01bf\u01be\3\2\2\2\u01bf\u01c0\3\2\2\2\u01c0\u01c1\3")
        buf.write("\2\2\2\u01c1\u01c8\5\u008dG\2\u01c2\u01c4\7\60\2\2\u01c3")
        buf.write("\u01c5\t\7\2\2\u01c4\u01c3\3\2\2\2\u01c5\u01c6\3\2\2\2")
        buf.write("\u01c6\u01c4\3\2\2\2\u01c6\u01c7\3\2\2\2\u01c7\u01c9\3")
        buf.write("\2\2\2\u01c8\u01c2\3\2\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01cb")
        buf.write("\3\2\2\2\u01ca\u01cc\5\u008fH\2\u01cb\u01ca\3\2\2\2\u01cb")
        buf.write("\u01cc\3\2\2\2\u01cc\u008c\3\2\2\2\u01cd\u01d6\7\62\2")
        buf.write("\2\u01ce\u01d2\t\b\2\2\u01cf\u01d1\t\7\2\2\u01d0\u01cf")
        buf.write("\3\2\2\2\u01d1\u01d4\3\2\2\2\u01d2\u01d0\3\2\2\2\u01d2")
        buf.write("\u01d3\3\2\2\2\u01d3\u01d6\3\2\2\2\u01d4\u01d2\3\2\2\2")
        buf.write("\u01d5\u01cd\3\2\2\2\u01d5\u01ce\3\2\2\2\u01d6\u008e\3")
        buf.write("\2\2\2\u01d7\u01d9\t\t\2\2\u01d8\u01da\t\n\2\2\u01d9\u01d8")
        buf.write("\3\2\2\2\u01d9\u01da\3\2\2\2\u01da\u01db\3\2\2\2\u01db")
        buf.write("\u01dc\5\u008dG\2\u01dc\u0090\3\2\2\2\u01dd\u01df\t\13")
        buf.write("\2\2\u01de\u01dd\3\2\2\2\u01df\u01e0\3\2\2\2\u01e0\u01de")
        buf.write("\3\2\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01e2\3\2\2\2\u01e2")
        buf.write("\u01e3\bI\2\2\u01e3\u0092\3\2\2\2\17\2\u01a1\u01a3\u01ac")
        buf.write("\u01b2\u01bf\u01c6\u01c8\u01cb\u01d2\u01d5\u01d9\u01e0")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class langLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    T__60 = 61
    T__61 = 62
    STRING = 63
    SYMBOL = 64
    NUMBER = 65
    WS = 66

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "','", "'}'", "':'", "'['", "']'", "'true'", "'false'", 
            "'null'", "'dynamic'", "'function'", "'('", "')'", "'(|'", "'|)'", 
            "'lockdown'", "'='", "';'", "'static'", "'typedef'", "'<'", 
            "'>'", "'|>'", "'is'", "'.'", "'?'", "'*'", "'/'", "'+'", "'-'", 
            "'%'", "'=='", "'!='", "'<='", "'>='", "'||'", "'&&'", "'<<'", 
            "'continue'", "'break'", "'*|>'", "'print'", "'return'", "'yield'", 
            "'export'", "'json'", "'=>'", "'Object'", "'Tuple'", "'...'", 
            "'List'", "'Dictionary'", "'Function'", "'if'", "'else if'", 
            "'else'", "'loop'", "'while'", "'for'", "'(var'", "'from'", 
            "'in'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "SYMBOL", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "T__59", "T__60", "T__61", 
                  "STRING", "SYMBOL", "ESC", "UNICODE", "HEX", "SAFECODEPOINT", 
                  "NUMBER", "INT", "EXP", "WS" ]

    grammarFileName = "lang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


