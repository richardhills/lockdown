# Generated from lang.g4 by ANTLR 4.7.2
# encoding: utf-8
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write(u"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2")
        buf.write(u"/\u0147\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4")
        buf.write(u"\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r")
        buf.write(u"\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22")
        buf.write(u"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4")
        buf.write(u"\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35")
        buf.write(u"\t\35\4\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4")
        buf.write(u"$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t")
        buf.write(u",\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63")
        buf.write(u"\t\63\4\64\t\64\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3")
        buf.write(u"\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3")
        buf.write(u"\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13")
        buf.write(u"\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3")
        buf.write(u"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write(u"\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3")
        buf.write(u"\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\31\3\31")
        buf.write(u"\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3")
        buf.write(u"\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3")
        buf.write(u" \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3")
        buf.write(u"#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3&\3&\3&\3&\3&")
        buf.write(u"\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3*\3")
        buf.write(u"*\3*\3*\3*\3+\3+\3+\7+\u0105\n+\f+\16+\u0108\13+\3+\3")
        buf.write(u"+\3,\3,\7,\u010e\n,\f,\16,\u0111\13,\3-\3-\3-\5-\u0116")
        buf.write(u"\n-\3.\3.\3.\3.\3.\3.\3/\3/\3\60\3\60\3\61\5\61\u0123")
        buf.write(u"\n\61\3\61\3\61\3\61\6\61\u0128\n\61\r\61\16\61\u0129")
        buf.write(u"\5\61\u012c\n\61\3\61\5\61\u012f\n\61\3\62\3\62\3\62")
        buf.write(u"\7\62\u0134\n\62\f\62\16\62\u0137\13\62\5\62\u0139\n")
        buf.write(u"\62\3\63\3\63\5\63\u013d\n\63\3\63\3\63\3\64\6\64\u0142")
        buf.write(u"\n\64\r\64\16\64\u0143\3\64\3\64\2\2\65\3\3\5\4\7\5\t")
        buf.write(u"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35")
        buf.write(u"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33")
        buf.write(u"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y\2")
        buf.write(u"[\2]\2_\2a.c\2e\2g/\3\2\f\4\2C\\c|\5\2\62;C\\c|\n\2$")
        buf.write(u"$\61\61^^ddhhppttvv\5\2\62;CHch\5\2\2!$$^^\3\2\62;\3")
        buf.write(u"\2\63;\4\2GGgg\4\2--//\5\2\13\f\17\17\"\"\2\u014c\2\3")
        buf.write(u"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2")
        buf.write(u"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2")
        buf.write(u"\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2")
        buf.write(u"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write(u"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2")
        buf.write(u"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2")
        buf.write(u"\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2")
        buf.write(u"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3")
        buf.write(u"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2")
        buf.write(u"S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2a\3\2\2\2\2g\3\2\2\2")
        buf.write(u"\3i\3\2\2\2\5k\3\2\2\2\7m\3\2\2\2\to\3\2\2\2\13q\3\2")
        buf.write(u"\2\2\rs\3\2\2\2\17u\3\2\2\2\21z\3\2\2\2\23\u0080\3\2")
        buf.write(u"\2\2\25\u0085\3\2\2\2\27\u008e\3\2\2\2\31\u0090\3\2\2")
        buf.write(u"\2\33\u0092\3\2\2\2\35\u0094\3\2\2\2\37\u0096\3\2\2\2")
        buf.write(u"!\u009d\3\2\2\2#\u00a5\3\2\2\2%\u00a7\3\2\2\2\'\u00a9")
        buf.write(u"\3\2\2\2)\u00ab\3\2\2\2+\u00ad\3\2\2\2-\u00af\3\2\2\2")
        buf.write(u"/\u00b1\3\2\2\2\61\u00b4\3\2\2\2\63\u00b7\3\2\2\2\65")
        buf.write(u"\u00b9\3\2\2\2\67\u00bc\3\2\2\29\u00be\3\2\2\2;\u00c1")
        buf.write(u"\3\2\2\2=\u00c4\3\2\2\2?\u00c7\3\2\2\2A\u00ce\3\2\2\2")
        buf.write(u"C\u00d4\3\2\2\2E\u00db\3\2\2\2G\u00e1\3\2\2\2I\u00e6")
        buf.write(u"\3\2\2\2K\u00e9\3\2\2\2M\u00ee\3\2\2\2O\u00f4\3\2\2\2")
        buf.write(u"Q\u00f8\3\2\2\2S\u00fc\3\2\2\2U\u0101\3\2\2\2W\u010b")
        buf.write(u"\3\2\2\2Y\u0112\3\2\2\2[\u0117\3\2\2\2]\u011d\3\2\2\2")
        buf.write(u"_\u011f\3\2\2\2a\u0122\3\2\2\2c\u0138\3\2\2\2e\u013a")
        buf.write(u"\3\2\2\2g\u0141\3\2\2\2ij\7}\2\2j\4\3\2\2\2kl\7.\2\2")
        buf.write(u"l\6\3\2\2\2mn\7\177\2\2n\b\3\2\2\2op\7<\2\2p\n\3\2\2")
        buf.write(u"\2qr\7]\2\2r\f\3\2\2\2st\7_\2\2t\16\3\2\2\2uv\7v\2\2")
        buf.write(u"vw\7t\2\2wx\7w\2\2xy\7g\2\2y\20\3\2\2\2z{\7h\2\2{|\7")
        buf.write(u"c\2\2|}\7n\2\2}~\7u\2\2~\177\7g\2\2\177\22\3\2\2\2\u0080")
        buf.write(u"\u0081\7p\2\2\u0081\u0082\7w\2\2\u0082\u0083\7n\2\2\u0083")
        buf.write(u"\u0084\7n\2\2\u0084\24\3\2\2\2\u0085\u0086\7h\2\2\u0086")
        buf.write(u"\u0087\7w\2\2\u0087\u0088\7p\2\2\u0088\u0089\7e\2\2\u0089")
        buf.write(u"\u008a\7v\2\2\u008a\u008b\7k\2\2\u008b\u008c\7q\2\2\u008c")
        buf.write(u"\u008d\7p\2\2\u008d\26\3\2\2\2\u008e\u008f\7*\2\2\u008f")
        buf.write(u"\30\3\2\2\2\u0090\u0091\7+\2\2\u0091\32\3\2\2\2\u0092")
        buf.write(u"\u0093\7?\2\2\u0093\34\3\2\2\2\u0094\u0095\7=\2\2\u0095")
        buf.write(u"\36\3\2\2\2\u0096\u0097\7u\2\2\u0097\u0098\7v\2\2\u0098")
        buf.write(u"\u0099\7c\2\2\u0099\u009a\7v\2\2\u009a\u009b\7k\2\2\u009b")
        buf.write(u"\u009c\7e\2\2\u009c \3\2\2\2\u009d\u009e\7v\2\2\u009e")
        buf.write(u"\u009f\7{\2\2\u009f\u00a0\7r\2\2\u00a0\u00a1\7g\2\2\u00a1")
        buf.write(u"\u00a2\7f\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7h\2\2\u00a4")
        buf.write(u"\"\3\2\2\2\u00a5\u00a6\7\60\2\2\u00a6$\3\2\2\2\u00a7")
        buf.write(u"\u00a8\7,\2\2\u00a8&\3\2\2\2\u00a9\u00aa\7\61\2\2\u00aa")
        buf.write(u"(\3\2\2\2\u00ab\u00ac\7-\2\2\u00ac*\3\2\2\2\u00ad\u00ae")
        buf.write(u"\7/\2\2\u00ae,\3\2\2\2\u00af\u00b0\7\'\2\2\u00b0.\3\2")
        buf.write(u"\2\2\u00b1\u00b2\7?\2\2\u00b2\u00b3\7?\2\2\u00b3\60\3")
        buf.write(u"\2\2\2\u00b4\u00b5\7#\2\2\u00b5\u00b6\7?\2\2\u00b6\62")
        buf.write(u"\3\2\2\2\u00b7\u00b8\7>\2\2\u00b8\64\3\2\2\2\u00b9\u00ba")
        buf.write(u"\7>\2\2\u00ba\u00bb\7?\2\2\u00bb\66\3\2\2\2\u00bc\u00bd")
        buf.write(u"\7@\2\2\u00bd8\3\2\2\2\u00be\u00bf\7@\2\2\u00bf\u00c0")
        buf.write(u"\7?\2\2\u00c0:\3\2\2\2\u00c1\u00c2\7~\2\2\u00c2\u00c3")
        buf.write(u"\7~\2\2\u00c3<\3\2\2\2\u00c4\u00c5\7(\2\2\u00c5\u00c6")
        buf.write(u"\7(\2\2\u00c6>\3\2\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9")
        buf.write(u"\7g\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7w\2\2\u00cb\u00cc")
        buf.write(u"\7t\2\2\u00cc\u00cd\7p\2\2\u00cd@\3\2\2\2\u00ce\u00cf")
        buf.write(u"\7d\2\2\u00cf\u00d0\7t\2\2\u00d0\u00d1\7g\2\2\u00d1\u00d2")
        buf.write(u"\7c\2\2\u00d2\u00d3\7m\2\2\u00d3B\3\2\2\2\u00d4\u00d5")
        buf.write(u"\7Q\2\2\u00d5\u00d6\7d\2\2\u00d6\u00d7\7l\2\2\u00d7\u00d8")
        buf.write(u"\7g\2\2\u00d8\u00d9\7e\2\2\u00d9\u00da\7v\2\2\u00daD")
        buf.write(u"\3\2\2\2\u00db\u00dc\7V\2\2\u00dc\u00dd\7w\2\2\u00dd")
        buf.write(u"\u00de\7r\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7g\2\2\u00e0")
        buf.write(u"F\3\2\2\2\u00e1\u00e2\7N\2\2\u00e2\u00e3\7k\2\2\u00e3")
        buf.write(u"\u00e4\7u\2\2\u00e4\u00e5\7v\2\2\u00e5H\3\2\2\2\u00e6")
        buf.write(u"\u00e7\7k\2\2\u00e7\u00e8\7h\2\2\u00e8J\3\2\2\2\u00e9")
        buf.write(u"\u00ea\7g\2\2\u00ea\u00eb\7n\2\2\u00eb\u00ec\7u\2\2\u00ec")
        buf.write(u"\u00ed\7g\2\2\u00edL\3\2\2\2\u00ee\u00ef\7y\2\2\u00ef")
        buf.write(u"\u00f0\7j\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7n\2\2\u00f2")
        buf.write(u"\u00f3\7g\2\2\u00f3N\3\2\2\2\u00f4\u00f5\7h\2\2\u00f5")
        buf.write(u"\u00f6\7q\2\2\u00f6\u00f7\7t\2\2\u00f7P\3\2\2\2\u00f8")
        buf.write(u"\u00f9\7x\2\2\u00f9\u00fa\7c\2\2\u00fa\u00fb\7t\2\2\u00fb")
        buf.write(u"R\3\2\2\2\u00fc\u00fd\7h\2\2\u00fd\u00fe\7t\2\2\u00fe")
        buf.write(u"\u00ff\7q\2\2\u00ff\u0100\7o\2\2\u0100T\3\2\2\2\u0101")
        buf.write(u"\u0106\7$\2\2\u0102\u0105\5Y-\2\u0103\u0105\5_\60\2\u0104")
        buf.write(u"\u0102\3\2\2\2\u0104\u0103\3\2\2\2\u0105\u0108\3\2\2")
        buf.write(u"\2\u0106\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107\u0109")
        buf.write(u"\3\2\2\2\u0108\u0106\3\2\2\2\u0109\u010a\7$\2\2\u010a")
        buf.write(u"V\3\2\2\2\u010b\u010f\t\2\2\2\u010c\u010e\t\3\2\2\u010d")
        buf.write(u"\u010c\3\2\2\2\u010e\u0111\3\2\2\2\u010f\u010d\3\2\2")
        buf.write(u"\2\u010f\u0110\3\2\2\2\u0110X\3\2\2\2\u0111\u010f\3\2")
        buf.write(u"\2\2\u0112\u0115\7^\2\2\u0113\u0116\t\4\2\2\u0114\u0116")
        buf.write(u"\5[.\2\u0115\u0113\3\2\2\2\u0115\u0114\3\2\2\2\u0116")
        buf.write(u"Z\3\2\2\2\u0117\u0118\7w\2\2\u0118\u0119\5]/\2\u0119")
        buf.write(u"\u011a\5]/\2\u011a\u011b\5]/\2\u011b\u011c\5]/\2\u011c")
        buf.write(u"\\\3\2\2\2\u011d\u011e\t\5\2\2\u011e^\3\2\2\2\u011f\u0120")
        buf.write(u"\n\6\2\2\u0120`\3\2\2\2\u0121\u0123\7/\2\2\u0122\u0121")
        buf.write(u"\3\2\2\2\u0122\u0123\3\2\2\2\u0123\u0124\3\2\2\2\u0124")
        buf.write(u"\u012b\5c\62\2\u0125\u0127\7\60\2\2\u0126\u0128\t\7\2")
        buf.write(u"\2\u0127\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u0127")
        buf.write(u"\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012c\3\2\2\2\u012b")
        buf.write(u"\u0125\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012e\3\2\2")
        buf.write(u"\2\u012d\u012f\5e\63\2\u012e\u012d\3\2\2\2\u012e\u012f")
        buf.write(u"\3\2\2\2\u012fb\3\2\2\2\u0130\u0139\7\62\2\2\u0131\u0135")
        buf.write(u"\t\b\2\2\u0132\u0134\t\7\2\2\u0133\u0132\3\2\2\2\u0134")
        buf.write(u"\u0137\3\2\2\2\u0135\u0133\3\2\2\2\u0135\u0136\3\2\2")
        buf.write(u"\2\u0136\u0139\3\2\2\2\u0137\u0135\3\2\2\2\u0138\u0130")
        buf.write(u"\3\2\2\2\u0138\u0131\3\2\2\2\u0139d\3\2\2\2\u013a\u013c")
        buf.write(u"\t\t\2\2\u013b\u013d\t\n\2\2\u013c\u013b\3\2\2\2\u013c")
        buf.write(u"\u013d\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013f\5c\62")
        buf.write(u"\2\u013ff\3\2\2\2\u0140\u0142\t\13\2\2\u0141\u0140\3")
        buf.write(u"\2\2\2\u0142\u0143\3\2\2\2\u0143\u0141\3\2\2\2\u0143")
        buf.write(u"\u0144\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0146\b\64\2")
        buf.write(u"\2\u0146h\3\2\2\2\17\2\u0104\u0106\u010f\u0115\u0122")
        buf.write(u"\u0129\u012b\u012e\u0135\u0138\u013c\u0143\3\b\2\2")
        return buf.getvalue()


class langLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    STRING = 42
    SYMBOL = 43
    NUMBER = 44
    WS = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"'{'", u"','", u"'}'", u"':'", u"'['", u"']'", u"'true'", u"'false'", 
            u"'null'", u"'function'", u"'('", u"')'", u"'='", u"';'", u"'static'", 
            u"'typedef'", u"'.'", u"'*'", u"'/'", u"'+'", u"'-'", u"'%'", 
            u"'=='", u"'!='", u"'<'", u"'<='", u"'>'", u"'>='", u"'||'", 
            u"'&&'", u"'return'", u"'break'", u"'Object'", u"'Tuple'", u"'List'", 
            u"'if'", u"'else'", u"'while'", u"'for'", u"'var'", u"'from'" ]

    symbolicNames = [ u"<INVALID>",
            u"STRING", u"SYMBOL", u"NUMBER", u"WS" ]

    ruleNames = [ u"T__0", u"T__1", u"T__2", u"T__3", u"T__4", u"T__5", 
                  u"T__6", u"T__7", u"T__8", u"T__9", u"T__10", u"T__11", 
                  u"T__12", u"T__13", u"T__14", u"T__15", u"T__16", u"T__17", 
                  u"T__18", u"T__19", u"T__20", u"T__21", u"T__22", u"T__23", 
                  u"T__24", u"T__25", u"T__26", u"T__27", u"T__28", u"T__29", 
                  u"T__30", u"T__31", u"T__32", u"T__33", u"T__34", u"T__35", 
                  u"T__36", u"T__37", u"T__38", u"T__39", u"T__40", u"STRING", 
                  u"SYMBOL", u"ESC", u"UNICODE", u"HEX", u"SAFECODEPOINT", 
                  u"NUMBER", u"INT", u"EXP", u"WS" ]

    grammarFileName = u"lang.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(langLexer, self).__init__(input, output=output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


